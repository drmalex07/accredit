#
# accredit - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#

[DEFAULT]
debug = True
email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

# This dns name should point to our server
server_host = id-provider.localdomain

# This should be the server-name (qualified with the port number if needed) 
# exactly as it should be requested through HTTP ("Host" header)
server_name = %(server_host)s

# This should be the naming context for all LDAP-based settings.
ldap_url = ldap://ldap.acme.local
naming_context = DC=acme,DC=local
organization = acme

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5003
#ssl_pem = %(here)s/certs/server.pem

[uwsgi]

# Allocate a socket (as root) at TCP/443 before dropping privileges, speak HTTPS  
#shared-socket = :443
#https = =0,certs/provider.crt,certs/provider.key
#uid = user
#gid = user

# Listen directly on TCP/5003 speaking HTTPS as a normal user
#https = :5003,certs/provider.crt,certs/provider.key

# Listen on a UNIX TCP socket
#socket = /tmp/accredit-uwsgi.sock
#chmod = 777

https = :5003,certs/provider.crt,certs/provider.key
master = 1
processes = 1
threads = 4

[app:main]
use = egg:accredit

#filter-with = server_name

full_stack = true
static_files = true

site.name = accredit-dev
site.lang = el

# Note: If you provide a path-prefix repoze.who login/logout paths must also be updated!
path_prefix =

beaker.session.type = redis
beaker.session.url = 127.0.0.1:6379

beaker.cache.type = file
beaker.cache.data_dir = %(here)s/data/cache
beaker.cache.lock_dir = %(here)s/data/cache/locks

beaker.session.key = accredit
beaker.session.secret = dJkUgAajzrRiD8hrNbdcnQ==
beaker.session.timeout = 3600

sqlalchemy.url = mssql+pyodbc://user:user@accredit

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

repoze.who.ini = %(here)s/who.ini
repoze.who.log.file = stdout
repoze.who.log.level = warning

#
# Theming - Provide alternative presentation templates
#

theme = twitty

#
# OpenID Provider (OP) configuration
#

# the <uid> part of a openid identity URI (https://<server>/openid/identity/<uid>) 
# is mapped on a certain metadata attribute (defaults to 'metadata:uid')
openid_provider.identity.uid = metadata:cn

openid_provider.force_synchronized = True
openid_provider.data_dir = %(here)s/data/openid

#openid_provider.store.backend = file
#openid_provider.store.backend.file.data_dir = %(here)s/data/openid

openid_provider.store.backend = redis
openid_provider.store.backend.redis.host = 127.0.0.1
openid_provider.store.backend.redis.port = 6379
openid_provider.store.backend.redis.db = 5
openid_provider.store.backend.redis.key_prefix = openid:

openid_provider.trust.backend = redis
openid_provider.trust.backend.redis.host = 127.0.0.1
openid_provider.trust.backend.redis.port = 6379
openid_provider.trust.backend.redis.db = 5
openid_provider.trust.backend.redis.key_prefix = trust:

openid_provider.trust.whitelisted_realms.1 = http://drupal7-1.localdomain/drupal7-a/
openid_provider.trust.whitelisted_realms.2 = https://drupal7-1.localdomain/drupal7-a/
openid_provider.trust.whitelisted_realms.3 = https://acme-widgits.net:8443/
openid_provider.trust.blacklisted_realms.1 = https://malory.example.com/

openid_provider.sreg.attrs = nickname, email
openid_provider.sreg.attr.nickname = metadata:cn
openid_provider.sreg.attr.email = metadata:mail

# Find more standardized AX attributes at: 
# http://openid.net/specs/openid-attribute-properties-list-1_0-01.html

openid_provider.ax.attrs = 
    name, email, firstname, lastname, middlename, postalcode, postaladdress, 
    memberof, lang, phone, photo, 
    employeeid, employeetype, 
    clientid, managedobjects, regcode, clientobject

openid_provider.ax.attr.firstname = metadata:givenName
openid_provider.ax.attr.firstname.type = http://openid.net/schema/namePerson/first
openid_provider.ax.attr.firstname.alias = firstname
openid_provider.ax.attr.firstname.description = A person`s first name (given name)
openid_provider.ax.attr.lastname = metadata:sn
openid_provider.ax.attr.lastname.type = http://openid.net/schema/namePerson/last
openid_provider.ax.attr.lastname.alias = lastname
openid_provider.ax.attr.lastname.description = A person`s last name (surname)
openid_provider.ax.attr.name = metadata:displayName
openid_provider.ax.attr.name.type = http://openid.net/schema/namePerson/friendly 
openid_provider.ax.attr.name.alias = name
openid_provider.ax.attr.name.description = A person`s full name 
openid_provider.ax.attr.middlename = metadata:middleName
openid_provider.ax.attr.middlename.type = http://openid.net/schema/namePerson/middlename
openid_provider.ax.attr.middlename.alias = middlename
openid_provider.ax.attr.middlename.description = A person`s middle name (e.g. father`s name)
openid_provider.ax.attr.email = metadata:mail
openid_provider.ax.attr.email.type = http://openid.net/schema/contact/internet/email
openid_provider.ax.attr.email.alias = email
openid_provider.ax.attr.email.description = The email address
openid_provider.ax.attr.postaladdress = metadata:postalAddress 
openid_provider.ax.attr.postaladdress.type = http://openid.net/schema/contact/postaladdress/home 
openid_provider.ax.attr.postaladdress.alias = postaladdress
openid_provider.ax.attr.postaladdress.description = The postal address
openid_provider.ax.attr.postalcode = metadata:postalCode
openid_provider.ax.attr.postalcode.type = http://openid.net/schema/contact/postalcode/home
openid_provider.ax.attr.postalcode.alias = postalcode
openid_provider.ax.attr.postalcode.description = The postal code for a postal address
openid_provider.ax.attr.lang = metadata:lang 
openid_provider.ax.attr.lang.type = http://openid.net/schema/language/pref
openid_provider.ax.attr.lang.alias = lang
openid_provider.ax.attr.lang.description = The preferred language
openid_provider.ax.attr.phone = metadata:phone 
openid_provider.ax.attr.phone.type = http://openid.net/schema/contact/phone/default
openid_provider.ax.attr.phone.alias = phone
openid_provider.ax.attr.phone.description = A telephone number
openid_provider.ax.attr.photo = metadata:photo 
openid_provider.ax.attr.photo.type = http://openid.net/schema/media/image
openid_provider.ax.attr.photo.alias = photo
openid_provider.ax.attr.photo.description = A person`s photograph
openid_provider.ax.attr.employeeid = metadata:employeeID
openid_provider.ax.attr.employeeid.type = http://%(server_host)s/openid/schema/ax/employeeid
openid_provider.ax.attr.employeeid.alias = employeeid
openid_provider.ax.attr.employeeid.description = The identifier of an employee 
openid_provider.ax.attr.employeetype = metadata:employeeType
openid_provider.ax.attr.employeetype.type = http://%(server_host)s/openid/schema/ax/employeetype
openid_provider.ax.attr.employeetype.alias = employeetype
openid_provider.ax.attr.employeetype.description = The category of an employee 
openid_provider.ax.attr.clientid = metadata:clientIdentifier
openid_provider.ax.attr.clientid.type = http://%(server_host)s/openid/schema/ax/clientid
openid_provider.ax.attr.clientid.alias = clientid
openid_provider.ax.attr.clientid.description = The unique client identifier
openid_provider.ax.attr.memberof = callback:devdsa.accredit.ax_attributes:GroupOfNamesAttribute
openid_provider.ax.attr.memberof.type = http://%(server_host)s/openid/schema/ax/memberof
openid_provider.ax.attr.memberof.alias = memberof
openid_provider.ax.attr.memberof.description = A group of organizations that a person is member of
openid_provider.ax.attr.memberof.callback.args = naming_context, metadata_key
openid_provider.ax.attr.memberof.callback.args.naming_context = %(naming_context)s
openid_provider.ax.attr.memberof.callback.args.metadata_key = memberOf
openid_provider.ax.attr.managedobjects = callback:devdsa.accredit.ax_attributes:GroupOfNamesAttribute
openid_provider.ax.attr.managedobjects.type = http://%(server_host)s/openid/schema/ax/managedobjects
openid_provider.ax.attr.managedobjects.alias = managedobjects
openid_provider.ax.attr.managedobjects.description = A group of organizations a person is in charge of
openid_provider.ax.attr.managedobjects.callback.args = naming_context, metadata_key
openid_provider.ax.attr.managedobjects.callback.args.naming_context = %(naming_context)s
openid_provider.ax.attr.managedobjects.callback.args.metadata_key = managedObjects
openid_provider.ax.attr.regcode = metadata:registrationCode 
openid_provider.ax.attr.regcode.type = http://%(server_host)s/openid/schema/ax/regcode
openid_provider.ax.attr.regcode.alias = regcode
openid_provider.ax.attr.regcode.description = The unique registration code
openid_provider.ax.attr.clientobject = callback:devdsa.accredit.ax_attributes:ClientObjectAttribute
openid_provider.ax.attr.clientobject.type = http://%(server_host)s/openid/schema/ax/clientobject
openid_provider.ax.attr.clientobject.alias = clientobject
openid_provider.ax.attr.clientobject.description = A set of properties that further describe a client

#
# AccountEditor configuration
#

accounts.manager = accredit.lib.auth.accounts:AccountManager
accounts.manager.args.ldap_url = %(ldap_url)s
accounts.manager.args.naming_context = %(naming_context)s
accounts.manager.args.organization = %(organization)s
accounts.manager.args.bind_dn = CN=directory-manager,CN=Users,%(naming_context)s
accounts.manager.args.bind_pass = secret

#
# Filters configuration 
#

[filter:server_name]
use = egg:accredit#server_name_filter
request_is_forwarded = True

#
# Logging configuration
#

[loggers]
keys = root, routes, accredit, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = WARN
handlers =
qualname = routes.middleware

[logger_accredit]
level = DEBUG
handlers =
qualname = accredit

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# INFO: logs SQL queries.
# DEBUG: logs SQL queries and results.

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = DEBUG
formatter = generic

[formatter_generic]
#format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
format = %(levelname)-7.7s [%(name)s] [%(threadName)s] %(message)s
datefmt = %H:%M:%S
